///////////////////////////////////////////////////////////////////////////// This structure represents Factory to produce Runner/////////////////////////////////////////////////////////////////////////////struct SimpleDefPRunnerFactory extends PRunnerFactory  //! runtextmacro Singelton("SimpleDefPRunnerFactory")  public method createRunner takes unit u returns PRunner    return SimpleDefPRunner.create(u)  endmethodendstructstruct SimpleDefPRunner extends PRunner  private static boolean initialized = false  private unit u  public static ObjectiveUnitPool pool    public static method init takes ObjectiveUnitPool pool returns nothing    if (SimpleDefPRunner.initialized == true) then      call showMessage("Map Error: attempted to initialize SimpleDefPRunner structure twice.")      return    endif    set SimpleDefPRunner.initialized = true      set SimpleDefPRunner.pool = pool    call Events.registerForDeath(function SimpleDefPRunner.catchDeath)  endmethod  public static method create takes unit u returns SimpleDefPRunner    local SimpleDefPRunner h    //try to allocate    set h = SimpleDefPRunner.allocate()    if (h == nill) then      call showMessage("Critical Map Error: couldn't allocate a SimpleDefPRunner.")      return nill    endif        set h.u = u    call RemoveGuardPosition(h.u)    call h.pool.add(h)        return h  endmethod  public method getUnit takes nothing returns unit    return this.u  endmethod    public static method fromUnit takes unit u returns SimpleDefPRunner    return SimpleDefPRunner(SimpleDefPRunner.pool.get(u))  endmethod    public method runObjective takes Objective o returns nothing    local PObjective po     local location loc        // handle PObjectives here    if(o.getType()==PObjective.typeid) then      set po = PObjective(o)            //order to waypoint      set loc = po.edge.getOrderLoc(po.egdeOffset)      call IssuePointOrderLocBJ(this.u, "move", loc)      call RemoveLocation(loc)          set loc = null    endif  endmethod    private static method catchDeath takes nothing returns nothing    local SimpleDefPRunner r        set r = SimpleDefPRunner.fromUnit(GetTriggerUnit())        if (r == nill) then      return    endif    //Finish    call SimpleDefPRunner.pool.remove(r)    call r.destroy()  endmethodendstruct